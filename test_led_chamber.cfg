[neopixel Chamber_lights]
pin: PB7
chain_count: 6
color_order: RGBW,RGBW,RGBW,RGBW,RGBW,RGBW
initial_RED: 0.45
initial_GREEN: 0.45
initial_BLUE: 0.45
initial_WHITE: 1.0

[gcode_macro _chamber_vars]  # G-code macro for chamber variables
variable_colors_chamber: {  # Define color variables for different states
    "cold": {"red": 0, "green": 0, "blue": 0, "white": 0},       # Idle state color
    "temper": {"red": 1, "green": 0, "blue": 0, "white": 0},     # Idle state color
    "hot": {"red": 0.9394, "green": 0.9607, "blue": 0.0196, "white": 0.0},  # Busy state color
    "active": {"red": 0, "green": 0, "blue": 0, "white": 1},     # Active state color
    "off": {"red": 0, "green": 0, "blue": 0, "white": 0},        # Off state color
    "full": {"red": 1, "green": 1, "blue": 1, "white": 1}        # Full state color
  }

variable_dim_factor_chamber: 1
gcode:
    {% set color_values = [] %}
    {% for color in variable_colors_chamber.values() %}
        {% set red = color.red * variable_dim_factor_chamber %}
        {% set green = color.green * variable_dim_factor_chamber %}
        {% set blue = color.blue * variable_dim_factor_chamber %}
        {% set white = color.white * variable_dim_factor_chamber %}
        {% set color_values = color_values + [red, green, blue, white] %}
    {% endfor %}
    SET_VARIABLE converted_color_values = color_values

# Other sections of your configuration...



[gcode_macro gne]

gcode:
  
    {% set chamber_vars = printer["gcode_macro _chamber_vars"] %}  # Set skirt variables
    {% set convert_color_values = printer["_convert_color_values"] %}  # Set skirt variables
  RESPOND MSG="Ro {convert_color_values.color_values}"
  RESPOND MSG="Rou {chamber_vars.dim_factor_chamber}"
